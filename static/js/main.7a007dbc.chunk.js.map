{"version":3,"sources":["components/Navbar.js","components/Formt.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","a","href","title","type","id","onClick","toggleMode","for","Formt","useState","text","setText","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","charAt","slice","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","class","role","word","lower","capitalize","msg","defaultProps","aboutus","App","setmode","setAlert","massege","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7a007dbc.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n// import { Link } from 'react-router-dom';\n\n\nexport default function Navbar(props) {\n    return (\n       \n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n            <div className=\"container-fluid\">\n                <a a className=\"navbar-brand\"  href=\" /\">{props.title}</a>\n                {/* < Link className=\"navbar-brand\"  to=\" /\">{props.title}</Link> */}\n\n\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\" /navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            {/* <Link className=\"nav-link active\" aria-current=\"page\"  to=\" /\">Home</Link> */}\n                            <a className=\"nav-link active\" aria-current=\"page\"   href=\" /\">Home</a>\n\n                        </li>\n                        {/* <li className=\"nav-item\">   \n                            <Link className=\"nav-link\"  to=\"/about\">{props.aboutus}</Link>\n                        </li>    */}\n                    </ul>\n                   \n                </div>\n                <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n                <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\n                <label className=\"form-check-label\" for=\"flexSwitchCheckDefault\">Enable DarkMode</label>\n                </div>\n             </div>\n           \n        </nav>\n\n\n\n      \n    ); \n}\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    aboutus: PropTypes.string   \n}\n\nNavbar.defaultProps = {\n    title : \"Set Title here \",\n    aboutus : \" About text here\"\n}\n","import React, {useState} from 'react'\n\nexport default function Formt(props) {\nconst handleUpclick = () =>{\n    console.log(\"Uppercase was clicked\");\n    let newText=text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Converted to uppercase\", \"success\");\n}\n\nconst handlelcClick = ()=>{\n    let newText=text.toLowerCase();\n    setText(newText);\n    props.showAlert(\"Converted to  Lowercase\", \"success\");\n}\n\nconst handleClearClick = ()=>{\n    let newText= \"\";\n    setText(newText);\n    props.showAlert(\"Clear Text\", \"success\");\n}\n\n\n\nconst handleTitleClick = ()=>{\n    let newText=text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();\n    setText(newText);\n    props.showAlert(\"Converted to Title\", \"success\");\n}\n\nconst  handleCopy =() =>{\n    var text =document.getElementById(\"myBox\");\n    text.select();\n    navigator.clipboard.writeText(text.value); \n}\n\nconst handleOnChange = (event) =>{\n    console.log(\"On change\");\n    setText(event.target.value);\n}\n\nconst handleExtraSpaces =() =>{\n    let newText = text.split(/[ ]+/);\n    setText(newText.join(\" \"))\n    props.showAlert(\"Sucessfuly remove Extra spaces\", \"success\");\n}\n\n\n    const [text, setText] = useState('');\n    return (\n        <>\n\n\n        <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>    \n        <div  className=\"mb-3\" >\n        <label for=\"mybox\"  className=\"form-label\"> <h2>{props.heading}</h2></label>\n        <textarea  className=\"form-control\"   value={text}  onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?' grey':' white', color:props.mode==='dark'?'white':'black'}} id=\" mybox\" rows=\"10\"></textarea>\n        </div>\n        <button className=\"btn btn-primary\"  onClick={handleUpclick }> Convert to Uppercase</button>\n        <button className=\"btn btn-primary m-3\" onClick={handlelcClick}> Convert To LowerCase</button>\n        <button className=\"btn btn-primary \" onClick={handleClearClick}> Clear</button>\n        <button className=\"btn btn-primary m-3\" onClick={handleTitleClick}> Title Case</button>\n        <button className=\"btn btn-primary \" onClick={handleCopy}>Copy Text</button>\n        <button className=\"btn btn-primary m-3\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\n\n\n        \n\n        </div>\n\n        <div className=\"container my-2 \" style={{color:props.mode==='dark'?'white':'black'}}>\n            <h2>Your Text Summary</h2>\n            <p>{text.split(\" \").length} words and {text.length} Characters</p>\n            <p>{0.008* text.split(\" \").length}minutes read</p>\n\n            <h2>Preview</h2>\n            <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\n\n\n        </div>\n\n        </>\n    )\n}\n","import React from 'react'\n\nexport default function Alert(props) {\n    const capitalize = (word)=>{\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n    return (\n     props.alert&& <div class={`alert alert-${props.alert.type  } alert-dismissible fade show` }role=\"alert\">\n        <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\n       </div>\n    )\n}\n","import \"./App.css\";\nimport React, {useState} from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Formt from \"./components/Formt\";\n// import About from \"./components/About\";\nimport Alert from \"./components/Alert\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n// import About from \"./components/About\";\n\nfunction App() {\n     const [mode, setmode] = useState('light');\n\n     const [alert, setAlert] = useState( null);\n\n     const showAlert=(massege,type)=>{\n         setAlert(\n             {\n                msg: massege,\n                type: type\n        \n\n             }\n         )\n         setTimeout(()=>{\n             setAlert(null)\n\n         },2000);\n\n       \n        }\n\n     const toggleMode = ()=>\n     {\n         if(mode ==='light'){\n             setmode('dark');\n             document.body.style.backgroundColor='gray';\n             showAlert(\"Dark mode has been Enabled\",\"success\");\n\n             document.title='textUtils - Dark mode';\n\n            // setInterval(()=>{\n            //     document.title='TextUtils is Amazing Mode';\n            // },1000);\n\n            //  setInterval(()=>{\n            //     document.title='Install TextUtils Now';\n            // },2000);\n\n         } \n\n\n         else{\n             setmode('light');\n             document.body.style.backgroundColor='  white'\n             showAlert(\"Light mode has been Enabled\",\"success\");\n             document.title='textUtils - Light mode';\n         }\n     }\n \n\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"zoo\" aboutus=\"about\" mode ={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container\">\n      \n\n      {/* <Switch>\n          <Route path=\"/about\">\n            <About/>\n          </Route> */}\n           \n          {/* <Route path=\"/\"> */}\n          <Formt showAlert={showAlert} heading=\"Enter the text to analyze\" mode ={mode}/>\n            \n          {/* </Route>\n        </Switch> */}\n\n       \n\n      </div>\n      {/* </Router> */}\n      \n     \n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}